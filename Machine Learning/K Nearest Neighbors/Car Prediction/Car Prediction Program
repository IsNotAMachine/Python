import sklearn
from sklearn.utils import shuffle
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np
from sklearn import linear_model, preprocessing

#Bringing in the car data
data = pd.read_csv("car.data")
print(data.head())

#Have to convert non numerical data to numerical data
le = preprocessing.LabelEncoder()

#create a list for each element in car.data so we can analyse the data as numbers
buying = le.fit_transform(list(data["buying"]))
maint = le.fit_transform(list(data["maint"]))
door = le.fit_transform(list(data["door"]))
persons = le.fit_transform(list(data["persons"]))
lug_boot = le.fit_transform(list(data["lug_boot"]))
safety = le.fit_transform(list(data["safety"]))
cls = le.fit_transform(list(data["class"]))
#Printing the transform of buying to make sure the data is numbers
print(buying)

predict = "class"

#zip creates tuple object with lists we give it
x = list(zip(buying, maint, door, persons, lug_boot, safety))
y = list(cls)

#identifying test and train variables
x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size=0.1)

#choosing Kneighbors classifier you can adjust n_neighbors to see if you get better results
model = KNeighborsClassifier(n_neighbors=9)

#Trainign the model and printing the accuracy
model.fit(x_train, y_train)
acc = model.score(x_test, y_test)
print(acc)

predicted = model.predict(x_test)

#names of classifier classifies list as
names = ['unacc', 'acc', 'good', 'vgood']

for x in range(len(predicted)):
    print("Predicted: ", names[predicted[x]], "Data: ", x_test[x], "Actual: ", names[y_test[x]])
    n = model.kneighbors([x_test[x]], 9, True)
    #print("N: ", n)
